CNN Model for MNIST Classification
================================

Model Architecture:
-----------------
SimpleCNN(
  (features): Sequential(
    (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): ReLU()
    (2): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (4): ReLU()
    (5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (7): ReLU()
    (8): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (classifier): Sequential(
    (0): Flatten(start_dim=1, end_dim=-1)
    (1): Linear(in_features=576, out_features=128, bias=True)
    (2): ReLU()
    (3): Dropout(p=0.3, inplace=False)
    (4): Linear(in_features=128, out_features=10, bias=True)
  )
)

Training Results:
----------------
Final Training Accuracy: 99.65%
Final Test Accuracy: 99.27%

Comparison with MLP (Part A):
---------------------------
1. Architecture Differences:
   - CNN uses convolutional layers for feature extraction
   - CNN preserves spatial relationships
   - CNN has fewer parameters than equivalent MLP

2. Performance Analysis:
   - CNN achieves better accuracy
   - CNN is more efficient at pattern recognition
   - CNN requires less training time for similar performance
